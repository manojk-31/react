Project Description:

The Attendance Management System allows users to mark attendance and view employee records. It interacts with an Employee API to fetch and store data in MongoDB. The system includes a Dashboard, an Attendance Page, and an Employee Records Page, all dynamically loading data from the API. 


#### Level 0 (Context Diagram):
At the highest level, the Attendance System processes user requests to mark attendance, view employee records, and access the dashboard.

+-----------------------+
|  External Entities    |
|     - User            |
+-----------------------+
          |
          v
+-----------------------------------+
|  Attendance System (1.0)          |
|  (Handles Employee Data)          |
+-----------------------------------+
          |
          v
+----------------------------+
| External API: Employee API |
+----------------------------+
          |
          v
+---------------------------+
| Database: MongoDB         |
+---------------------------+


Explanation:
●	External Entity (User):  The user interacts with the system to mark attendance, view employee records, or check the dashboard.
●	Process (Attendance System): The system loads relevant pages, interacts with the Employee API, and manages data in MongoDB.
●	External API (Employee API): The system fetches or updates employee attendance data via an API.
●	Database (MongoDB): The system stores employee attendance records in a database.
________________________________________
#####Level 1 DFD (Decomposition of Process):
Now, let's break down the Attendance Management System process (Process 1.0) into more detailed steps:

✔ Dashboard :
  • Displays Welcome page.

✔ Mark Attendance:

  • User marks attendance.
  • Data is sent to Employee API.
  • Employee API updates MongoDB.


✔ Employee Records:                                               
  • Loads employee attendance page.
  • Fetches attendance records from MongoDB via Employee API.
  • Displays records in the UI.

+------------------------+       
|    External Entity     |       
|       (User)           |        
+------------------------+       
          |                                
          v                                
+----------------------------------+       
| Process: 1.1 - Load Dashboard    |
+----------------------------------+
          |
          v
+----------------------------------+
| Process: 1.2 - Fetch & Render   |
|    Dashboard Data (API)         |
+----------------------------------+
          |                                
          v                                
+---------------------------------------+       
| Process: 1.3 - Load Attendance Page   |
+---------------------------------------+
          |
          v
+--------------------------------------------+
| Process: 1.4 - Fetch & Store Attendance   |
|      (API & MongoDB Interaction)          |
+--------------------------------------------+
          |                                
          v                                
+-----------------------------------------+       
| Process: 1.5 - Load Employees Page      |
+-----------------------------------------+
          |
          v
+----------------------------------------------+
| Process: 1.6 - Fetch & Display Employee Data |
|          (API & MongoDB Interaction)         |
+----------------------------------------------+



Explanation:
•	Process 1.1 (Load Dashboard): When the user navigates to the dashboard, the system loads the UI.
• Process 1.2 (Fetch & Render Dashboard Data): The system fetches attendance summaries from the Employee API.
• Process 1.3 (Load Attendance Page): The user navigates to the attendance marking page.
• Process 1.4 (Fetch & Store Attendance): The system sends attendance data to the Employee API, which updates the MongoDB database.
• Process 1.5 (Load Employees Page): The user navigates to view employee records.
• Process 1.6 (Fetch & Display Employee Data): The system retrieves stored attendance records from the Employee API, which fetches data from MongoDB


Data Flow:
✔ The user interacts with the system.
✔ The system fetches employee data from the Employee API.
✔ The API retrieves/sends data to MongoDB for storage.
✔ Attendance records and employee data are stored and updated in the database


Additional Notes:
•	User interacts with the Attendance System to mark attendance and view records.
• The system fetches & stores data using the Employee API.
• MongoDB is used to store employee attendance data.
• Dashboard & Employee Pages fetch data from the API.
• Attendance Page sends data to the API, which updates the database.
